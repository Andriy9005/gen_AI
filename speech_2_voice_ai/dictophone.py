import os
import sounddevice as sd
from scipy.io.wavfile import write
import whisper
import pandas as pd
from jiwer import wer
import language_tool_python
import time

# ‚öôÔ∏è Whisper + LanguageTool
tool = language_tool_python.LanguageToolPublicAPI('uk-UA')
model = whisper.load_model("medium")

# üìç –í–∫–∞–∑–∞—Ç–∏ —à–ª—è—Ö –¥–æ ffmpeg, —è–∫—â–æ –Ω–µ –≤ —Å–∏—Å—Ç–µ–º—ñ
ffmpeg_path = r"C:\Users\Andriy.Bespalyy\ffmpeg\bin"
os.environ["PATH"] = ffmpeg_path + os.pathsep + os.environ["PATH"]

import sounddevice as sd
from scipy.io.wavfile import write

duration = 10  # seconds
sample_rate = 44100
device_index = 8  # üéØ –¶–µ –≤–∞—à –∞–∫—Ç–∏–≤–Ω–∏–π –º—ñ–∫—Ä–æ—Ñ–æ–Ω
output_file = "mic_recording.wav"

print(f"üé§ Recording for {duration} seconds from device #{device_index}...")
recording = sd.rec(
    int(duration * sample_rate),
    samplerate=sample_rate,
    channels=1,
    dtype='int16',
    device=device_index
)
sd.wait()
write(output_file, sample_rate, recording)
print(f"‚úÖ Audio saved as {output_file}")

# üéß –í—ñ–¥—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
sd.play(recording, samplerate=sample_rate)
sd.wait()



# üß† –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü—ñ—è
print("üß† Transcribing...")
result = model.transcribe(output_file, language="uk")
raw_text = result["text"]

# üìù –ì—Ä–∞–º–∞—Ç–∏—á–Ω–∞ –∫–æ—Ä–µ–∫—Ü—ñ—è
def correct_text(text):
    matches = tool.check(text)
    return language_tool_python.utils.correct(text, matches)

corrected = correct_text(raw_text)
print(f"‚úÖ Corrected transcript:\n{corrected}")

# üíæ –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤ CSV
transcripts = [{"file": output_file, "transcript": corrected}]
df = pd.DataFrame(transcripts)
df.to_csv("transcriptions_uk_corrected.csv", index=False, encoding="utf-8-sig")
print("üìÑ Saved to transcriptions_uk_corrected.csv")

# üìè WER (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
ground_truths = {
    "mic_recording.wav": "–û—á—ñ–∫—É–≤–∞–Ω–∏–π —Ç–µ–∫—Å—Ç —Ç—É—Ç –¥–ª—è –æ—Ü—ñ–Ω–∫–∏ —Ç–æ—á–Ω–æ—Å—Ç—ñ"  # –ó–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π –µ—Ç–∞–ª–æ–Ω
}

wer_scores = []
if output_file in ground_truths:
    gt = ground_truths[output_file]
    error = wer(gt, corrected)
    wer_scores.append({"file": output_file, "WER": error})
    df_wer = pd.DataFrame(wer_scores)
    df_wer.to_csv("wer_scores_uk.csv", index=False, encoding="utf-8-sig")
    print(f"üìâ WER saved: {error:.2%}")
else:
    print("‚ÑπÔ∏è Ground-truth not provided ‚Üí WER not calculated.")
